<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <fieldset>

        <ValueDetailList :modelValue="topValues" />

        <div class="row">
            <div class="col-md-12">
                <div v-if="flagCount > 0" class="pull-right">
                    <span class="label label-warning" tabindex="-1" data-toggle="tooltip"
                        data-placement="auto" data-container="body" data-html="true"
                        data-original-title="To clear the flags you'll have to re-approve this request.">
                        <i class="fa fa-flag"></i> flagged {{ flagCount }} times
                    </span>
                </div>
                <ValueDetailList :modelValue="leftSideValues" />
            </div>

            <div class="col-md-6">
                <ValueDetailList :modelValue="rightSideValues" />
            </div>
        </div>
    </fieldset>
</template>

<script setup lang="ts">
    import { computed, PropType, ref } from "vue";
    import ValueDetailList from "@Obsidian/Controls/valueDetailList";
    import { ValueDetailListItemBuilder } from "@Obsidian/Core/Controls/valueDetailListItemBuilder";
    import { ValueDetailListItem } from "@Obsidian/Types/Controls/valueDetailListItem";
    import { PrayerRequestBag } from "@Obsidian/ViewModels/Blocks/Prayer/PrayerRequestDetail/prayerRequestBag";
    import { PrayerRequestDetailOptionsBag } from "@Obsidian/ViewModels/Blocks/Prayer/PrayerRequestDetail/prayerRequestDetailOptionsBag";

    const props = defineProps({
        modelValue: {
            type: Object as PropType<PrayerRequestBag | null>,
            required: false
        },

            options: {
            type: Object as PropType<PrayerRequestDetailOptionsBag>,
            required: true
        }
    });

    // #region Values

    const attributes = ref(props.modelValue?.attributes ?? {});
    const attributeValues = ref(props.modelValue?.attributeValues ?? {});
    const flagCount = props.modelValue?.flagCount ?? 0;

    // #endregion

    // #region Computed Values

    /** The values to display full-width at the top of the block. */
    const topValues = computed((): ValueDetailListItem[] => {
        const valueBuilder = new ValueDetailListItemBuilder();

        if (!props.modelValue) {
            return valueBuilder.build();
        }

        return valueBuilder.build();
    });

    /** The values to display at half-width on the left side of the block. */
    const leftSideValues = computed((): ValueDetailListItem[] => {
        const valueBuilder = new ValueDetailListItemBuilder();

        if (!props.modelValue) {
            return valueBuilder.build();
        }

        if(props.modelValue?.group) {
            valueBuilder.addTextValue("Group", props.modelValue.group.text ?? "");
        }

        if(props.modelValue?.requestedByPersonAlias) {
            valueBuilder.addTextValue("Requested By", props.modelValue?.requestedByPersonAlias?.text ?? "");
        }

        valueBuilder.addTextValue("Name", `${props.modelValue?.fullName ?? ""}`);

        const email = props.modelValue?.email ?? "";
        if(email) {
            valueBuilder.addHtmlValue("Email", `<a hRockLabel ref="mailto:${email}">${email}</a>`);
        }

        if(props.modelValue?.campus?.text) {
            valueBuilder.addTextValue("Campus", props.modelValue?.campus.text);
        }

        valueBuilder.addHtmlValue("Request", props.modelValue?.text ?? "");

        valueBuilder.addHtmlValue("Answer", props.modelValue?.answer ?? "");


        return valueBuilder.build();
    });

    /** The values to display at half-width on the left side of the block. */
    const rightSideValues = computed((): ValueDetailListItem[] => {
        const valueBuilder = new ValueDetailListItemBuilder();

        if (!props.modelValue) {
            return valueBuilder.build();
        }

        return valueBuilder.build();
    });

    // #endregion

    // #region Functions

    // #endregion

    // #region Event Handlers

    // #endregion
</script>
